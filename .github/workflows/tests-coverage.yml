name: Test Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        generator:
          - gen-arktype
          - gen-msw
          - gen-shadcn-form
          - gen-shadcn-select
          - gen-shadcn-table
          - gen-supabase-hono
          - gen-tanstack-query-fetch-zod
          - gen-tanstack-query-supabase-zod
          - gen-typescript
          - gen-valibot
          - gen-zod

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x

    - name: Run tests with coverage for ${{ matrix.generator }}
      working-directory: ${{ matrix.generator }}
      run: deno task test:coverage

    - name: Generate LCOV report for ${{ matrix.generator }}
      working-directory: ${{ matrix.generator }}
      run: deno task coverage:report

    - name: Check if coverage report exists
      id: check-coverage
      working-directory: ${{ matrix.generator }}
      run: |
        if [ -f coverage.lcov ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload coverage to Coveralls
      if: steps.check-coverage.outputs.exists == 'true'
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{ matrix.generator }}/coverage.lcov
        flag-name: ${{ matrix.generator }}
        parallel: true

  finish:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
    - name: Close parallel build
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
